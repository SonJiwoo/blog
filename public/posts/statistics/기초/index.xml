<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>기초통계학 on JW Blog</title>
    <link>https://jiwooblog.netlify.app/posts/statistics/%EA%B8%B0%EC%B4%88/</link>
    <description>Recent content in 기초통계학 on JW Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 20 Jan 2021 10:08:56 +0900</lastBuildDate>
    
        <atom:link href="https://jiwooblog.netlify.app/posts/statistics/%EA%B8%B0%EC%B4%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>MVN</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/%EA%B8%B0%EC%B4%88/mvn/</link>
        <pubDate>Fri, 08 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/%EA%B8%B0%EC%B4%88/mvn/</guid>
        <description>1. Drawing MVN plots with ggplot2 div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;}1 2  mu = matrix(c(0,10), ncol=1) invSig = solve(matrix(c(4,10,10,100), ncol=2, byrow=TRUE))   /div&amp;gt;
1-1. Vectorize + Outer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  dmvlnorm = function(theta, mu, invSig){ (-nrow(mu)/2) * log(2*pi) + 0.5*log(det(invSig)) - 0.5*(t(theta-mu) %*% invSig %*% (theta-mu)) } calc.</description>
      </item>
      
      <item>
        <title>test</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/%EA%B8%B0%EC%B4%88/test/</link>
        <pubDate>Fri, 08 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/%EA%B8%B0%EC%B4%88/test/</guid>
        <description>plotly 1 2 3  library(ggplot2) library(plotly) library(gapminder)   1 2 3 4 5 6 7 8  p &amp;lt;- gapminder %&amp;gt;% filter(year==1977) %&amp;gt;% ggplot( aes(gdpPercap, lifeExp, size = pop, color=continent)) + geom_point() + scale_x_log10() + theme_bw() ggplotly(p)   {&#34;x&#34;:{&#34;data&#34;:[{&#34;x&#34;:[3.69111835304969,3.47837128685849,3.0124834262036,3.50716177034781,2.87121498358872,2.74515544499733,3.25125676748187,3.04507811557752,3.05460729073385,3.06915101836112,2.90078062155373,3.51310821042633,3.40101028408395,3.48879895792208,3.44490216214739,2.98162238872728,2.7039391611549,2.74570576546197,4.3373708614867,2.94682314869669,2.99704718642708,2.94185210799775,2.88350583493768,3.10298675433845,2.87237164152654,2.8063987207202,4.34145849934605,3.18871158763867,2.82166002181421,2.83657428165302,3.17536457562432,3.56948896052176,3.37486193965761,2.70098023955392,3.58843821514052,2.90789326381397,3.29709308978461,3.6354640490023,2.82612704524949,3.23994022438144,3.19361683040004,3.12978175413031,3.16166517152032,3.90464260358686,3.34301221488094,3.57765383934322,2.9833972607425,3.185478974435,3.49427662628827,2.92620510614229,3.20103869689067,2.83606300605042],&#34;y&#34;:[58.014,39.483,49.19,59.319,46.137,45.91,49.355,46.775,47.383,50.939,47.804,55.625,52.374,46.519,53.319,42.024,44.535,44.51,52.79,41.842,51.756,40.762,37.465,56.155,52.208,43.764,57.442,46.881,43.767,41.714,50.852,64.93,55.73,42.495,56.437,41.291,44.514,67.064,45,58.55,48.879,36.788,41.974,55.527,47.8,52.537,49.919,52.887,59.837,50.35,51.386,57.674],&#34;text&#34;:[&#34;gdpPercap: 4910.4168
lifeExp: 58.01400
pop: 17152804
continent: Africa&#34;,&#34;gdpPercap: 3008.6474
lifeExp: 39.48300
pop: 6162675
continent: Africa&#34;,&#34;gdpPercap: 1029.1613
lifeExp: 49.19000
pop: 3168267
continent: Africa&#34;,&#34;gdpPercap: 3214.</description>
      </item>
      
    
  </channel>
</rss>